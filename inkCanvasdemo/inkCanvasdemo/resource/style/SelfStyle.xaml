<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Baggage">
    <!--所有静态样式资源-->
    <!--windows窗体样式-->
    <Style x:Key="MyWindow">
        <Setter Property="Window.ResizeMode" Value="NoResize"></Setter>
        <Setter Property="Window.ShowInTaskbar" Value="False"></Setter>
        <Setter Property="Window.UseLayoutRounding" Value="False"></Setter>
        <Setter Property="Window.AllowsTransparency" Value="True"></Setter>
        <Setter Property="Window.Background" Value="Transparent"></Setter>
        <Setter Property="Window.WindowStyle" Value="None"></Setter>
    </Style>
    <!--弹窗标题通用样式-->
    <Style x:Key="CommonTopbarTitle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <!--弹窗标题通用样式-->
    <Style x:Key="Home_Kaibaojilu" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--圆角按钮-->
    <Style x:Key="Radius_Buuton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  x:Name="_border"  CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"   SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="_contentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Blue" TargetName="_border"/>
                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" TargetName="_contentPanel" Value="2,2,0,0"/>
                            <Setter Property="Opacity" Value=".6" TargetName="_border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--物品录入处理方式button样式继承圆角button样式-->
    <Style x:Key="InputGoodsButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Radius_Buuton}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="Margin" Value="5,10,5,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  x:Name="_border"  CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"   SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="_contentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--物品录入处理方式button样式继承圆角button样式-->
    <Style x:Key="CommonButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Radius_Buuton}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="106"/>
        <Setter Property="Margin" Value="0,20,16,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  x:Name="_border"  CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"   SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="_contentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" TargetName="_contentPanel" Value="2,2,0,0"/>
                            <Setter Property="Opacity" Value=".6" TargetName="_border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--物品录入处理方式button样式继承圆角button样式-->
    <Style x:Key="Home_Brush" TargetType="{x:Type Ellipse}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Margin" Value="20,18,0,18"/>
        <Setter Property="Stroke" Value="White"></Setter>
        <Setter Property="StrokeThickness" Value="0"></Setter>
    </Style>

    <!--物品录入处理方式button样式继承圆角button样式-->
    <Style x:Key="HomeKAIBAO_Button" TargetType="{x:Type Button}" BasedOn="{StaticResource Radius_Buuton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  x:Name="_border"  CornerRadius="4,0,0,4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"   SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="_contentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HomeBAOCUN_Button" TargetType="{x:Type Button}" BasedOn="{StaticResource Radius_Buuton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  x:Name="_border"  CornerRadius="0,4,4,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"   SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="_contentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--班组上岗中上岗按钮圆角-->
    <Style x:Key="ShangGang_Button" TargetType="{x:Type Button}" BasedOn="{StaticResource Radius_Buuton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  x:Name="_border"  CornerRadius="23" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"   SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="_contentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--扫描员工卡号处理方式button样式继承圆角button样式-->
    <Style x:Key="ScanEmplCardNoButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Radius_Buuton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  x:Name="_border"  CornerRadius="21" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"   SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="_contentPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" TargetName="_contentPanel" Value="2,2,0,0"/>
                            <Setter Property="Opacity" Value=".6" TargetName="_border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--头标题按钮样式-->
    <Style  x:Key="FTDate" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent"  Cursor="Hand"
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                        <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity"  Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Day按钮样式-->
    <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="Width" Value="56" />
        <Setter Property="Height" Value="56" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Margin}"  >
                        <Border x:Name="Bg"  Background="{TemplateBinding Background}"  BorderThickness="2"  CornerRadius="28" ></Border>
                        <Border x:Name="FShawd"  Background="{TemplateBinding Background}"  CornerRadius="28" >
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="40" Color="#04adb3" Direction="270" Opacity="0.6" ShadowDepth="5"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="5,2,5,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True" >
                            <Setter Property="Background" Value="#04adb3"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="BorderBrush" Value="#04adb3"  TargetName="FShawd"></Setter>
                        </Trigger>
                        <Trigger Property="IsToday" Value="True">
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="BorderBrush" Value="#04adb3"  TargetName="Bg"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" Value="#59616c"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <!--不可用日期-->
                        <Trigger Property="IsBlackedOut" Value="True">
                            <Setter Property="Opacity" Value="0.5" TargetName="Grid"></Setter>
                        </Trigger>
                        <!--不在当月的日期-->
                        <Trigger Property="IsInactive" Value="True">
                            <Setter Property="Opacity" Value="0.5" TargetName="Grid"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.8" TargetName="Grid"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--年、月按钮样式-->
    <Style x:Key="CalendarButtonStyle" TargetType="{x:Type CalendarButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid x:Name="Grid" Margin="{TemplateBinding Margin}" Width="64" Height="64">
                        <Border x:Name="Bg"  Background="{TemplateBinding Background }" BorderThickness="2"  CornerRadius="29"/>
                        <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,2,5,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#04adb3"  TargetName="Bg"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"  Value="Gray"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <!--不在当月的日期-->
                        <Trigger Property="IsInactive" Value="True">
                            <Setter Property="Opacity" Value="0.8" TargetName="Grid"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.8" TargetName="Grid"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--日历日期面板样式-->
    <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="Width" Value="400" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <!-- 头部星期样式-->
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Text="{Binding}" FontWeight="Bold"  Foreground="White"
                                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,6,0,6"  Opacity="0.5"/>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root" >
                        <Border   Margin="{TemplateBinding Margin}" CornerRadius="12" Background="#21252e" >
                            <Grid Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" ></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!--Header-->
                                <Grid Grid.Row="0" HorizontalAlignment="Center"  Margin="0,15,0,395.6" VerticalAlignment="Center" Height="50" Grid.RowSpan="2"  Width="400">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Height="50">
                                        <StackPanel   Width="390" Height="50" Orientation="Horizontal"  Margin="5 0">
                                            <Border Height="50" Width="400"  BorderThickness="0" CornerRadius="5" Background="#1d2228" >
                                                <StackPanel Orientation="Horizontal">
                                                    <Button  x:Name="PART_HeaderButton" Cursor="Hand"
                                                        Focusable="False" Grid.Column="0"  Foreground="#ddd" HorizontalAlignment="Left"    Style="{StaticResource FTDate}"  Margin="10 0 0 0" FontSize="24"/>
                                                    <!---左切换-->
                                                    <Button  x:Name="PART_PreviousButton"   Cursor="Hand"  Foreground="White" Width="20" Height="15"
                                                    Focusable="False" Grid.Column="1"  HorizontalAlignment="Right" Background="#1d212a" BorderThickness="0" Margin="170 0 20 0">
                                                        <Button.Template>
                                                            <ControlTemplate>
                                                                <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0">
                                                                    <Border.Background>
                                                                        <ImageBrush ImageSource="/Baggage;component/resource/images/msg_icon_back.png"/>
                                                                    </Border.Background>
                                                                    <ContentPresenter Content="" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Button.Template>
                                                    </Button>
                                                    <!--  右切换-->
                                                    <Button  x:Name="PART_NextButton"   Foreground="White" Width="20" Height="15"  Cursor="Hand"
                                                    Focusable="False" Grid.Column="1"  HorizontalAlignment="Right" Background="#1d212a" BorderThickness="0" Margin="0 0 0 0">
                                                        <Button.Template>
                                                            <ControlTemplate>
                                                                <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0">
                                                                    <Border.Background>
                                                                        <ImageBrush ImageSource="/Baggage;component/resource/images/msg_icon_next.png"/>
                                                                    </Border.Background>
                                                                    <ContentPresenter Content="" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Button.Template>
                                                    </Button>
                                                </StackPanel>

                                            </Border>

                                        </StackPanel>
                                    </StackPanel>

                                </Grid>
                                <!--PART_MonthView-->
                                <Grid x:Name="PART_MonthView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="6,30,6,6" Grid.Row="1" Visibility="Visible">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                </Grid>
                                <!--PART_YearView-->
                                <Grid x:Name="PART_YearView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="6,10,6,10" Grid.Row="1" Visibility="Hidden">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_Root" Value="0.8" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year" >
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--消息侧滑-->
    <Storyboard x:Key="NMsgListShow">
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="NMsgList">
            <EasingThicknessKeyFrame KeyTime="0:0:1" Value="0,0,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CircleEase/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="NMsgListHide">
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="NMsgList">
            <EasingThicknessKeyFrame KeyTime="0:0:1" Value="1920,0,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
    </Storyboard>

    <!--默认样式-->
    <Style x:Key="DefaultRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="Black"></Setter>
        <Setter Property="FontSize" Value="32"></Setter>
        <Setter Property="Margin" Value="30, 0, 0, 0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>
</ResourceDictionary>